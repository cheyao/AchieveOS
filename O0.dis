
lib/main.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	bf 00 00 00 00       	mov    edi,0x0
   9:	48 b8 00 00 00 00 00 	movabs rax,0x0
  10:	00 00 00 
  13:	ff d0                	call   rax <- Update cursor
  15:	48 b8 00 00 00 00 00 	movabs rax,0x0
  1c:	00 00 00 
  1f:	ff d0                	call   rax <- Init IDT
  21:	48 b8 00 00 00 00 00 	movabs rax,0x0
  28:	00 00 00 
  2b:	48 89 c7             	mov    rdi,rax
  2e:	48 b8 00 00 00 00 00 	movabs rax,0x0
  35:	00 00 00 
  38:	ff d0                	call   rax <- The puts!!!
  3a:	90                   	nop
  3b:	5d                   	pop    rbp
  3c:	c3                   	ret

Disassembly of section .rodata:

0000000000000000 <stderr>:
   0:	ff                   	(bad)
   1:	ff                   	(bad)
   2:	ff                   	(bad)
   3:	ff                   	(bad)
   4:	ff                   	(bad)
   5:	ff                   	(bad)
   6:	ff                   	(bad)
   7:	ff 48 65             	dec    DWORD PTR [rax+0x65]
   a:	6c                   	ins    BYTE PTR es:[rdi],dx
   b:	6c                   	ins    BYTE PTR es:[rdi],dx
   c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   d:	20 77 6f             	and    BYTE PTR [rdi+0x6f],dh
  10:	72 6c                	jb     7e <stderr+0x7e>
  12:	64                   	fs
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   9:	55                   	push   rbp
   a:	29 20                	sub    DWORD PTR [rax],esp
   c:	31 32                	xor    DWORD PTR [rdx],esi
   e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  11:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	3d 00 00 00 00       	cmp    eax,0x0
  29:	41 0e                	rex.B (bad)
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	78 c6                	js     fffffffffffffff9 <main+0xfffffffffffffff9>
  33:	0c 07                	or     al,0x7
  35:	08 00                	or     BYTE PTR [rax],al
	...
