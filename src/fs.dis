
src/fs.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <read>:
   0:	55                   	push   rbp
   1:	be a0 00 00 00       	mov    esi,0xa0
   6:	bf f0 01 00 00       	mov    edi,0x1f0
   b:	48 89 e5             	mov    rbp,rsp
   e:	41 55                	push   r13
  10:	49 bd 00 00 00 00 00 	movabs r13,0x0
  17:	00 00 00 
  1a:	41 54                	push   r12
  1c:	49 bc 00 00 00 00 00 	movabs r12,0x0
  23:	00 00 00 
  26:	53                   	push   rbx
  27:	48 bb 00 00 00 00 00 	movabs rbx,0x0
  2e:	00 00 00 
  31:	48 83 ec 18          	sub    rsp,0x18
  35:	ff d3                	call   rbx
  37:	31 f6                	xor    esi,esi
  39:	bf f2 01 00 00       	mov    edi,0x1f2
  3e:	ff d3                	call   rbx
  40:	31 f6                	xor    esi,esi
  42:	bf f3 01 00 00       	mov    edi,0x1f3
  47:	ff d3                	call   rbx
  49:	31 f6                	xor    esi,esi
  4b:	bf f4 01 00 00       	mov    edi,0x1f4
  50:	ff d3                	call   rbx
  52:	31 f6                	xor    esi,esi
  54:	bf f5 01 00 00       	mov    edi,0x1f5
  59:	ff d3                	call   rbx
  5b:	be ec 00 00 00       	mov    esi,0xec
  60:	bf f6 01 00 00       	mov    edi,0x1f6
  65:	ff d3                	call   rbx
  67:	bf f7 01 00 00       	mov    edi,0x1f7
  6c:	48 bb 00 00 00 00 00 	movabs rbx,0x0
  73:	00 00 00 
  76:	ff d3                	call   rbx
  78:	4c 89 ef             	mov    rdi,r13
  7b:	88 45 db             	mov    BYTE PTR [rbp-0x25],al
  7e:	31 c0                	xor    eax,eax
  80:	0f b6 75 db          	movzx  esi,BYTE PTR [rbp-0x25]
  84:	41 ff d4             	call   r12
  87:	0f b6 45 db          	movzx  eax,BYTE PTR [rbp-0x25]
  8b:	a8 08                	test   al,0x8
  8d:	75 36                	jne    c5 <read+0xc5>
  8f:	90                   	nop
  90:	0f b6 45 db          	movzx  eax,BYTE PTR [rbp-0x25]
  94:	a8 01                	test   al,0x1
  96:	75 2d                	jne    c5 <read+0xc5>
  98:	bf f7 01 00 00       	mov    edi,0x1f7
  9d:	ff d3                	call   rbx
  9f:	88 45 db             	mov    BYTE PTR [rbp-0x25],al
  a2:	c7 45 dc e8 03 00 00 	mov    DWORD PTR [rbp-0x24],0x3e8
  a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
  b0:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  b3:	8d 50 ff             	lea    edx,[rax-0x1]
  b6:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
  b9:	85 c0                	test   eax,eax
  bb:	75 f3                	jne    b0 <read+0xb0>
  bd:	0f b6 45 db          	movzx  eax,BYTE PTR [rbp-0x25]
  c1:	a8 08                	test   al,0x8
  c3:	74 cb                	je     90 <read+0x90>
  c5:	0f b6 75 db          	movzx  esi,BYTE PTR [rbp-0x25]
  c9:	48 83 c4 18          	add    rsp,0x18
  cd:	4c 89 ef             	mov    rdi,r13
  d0:	4c 89 e1             	mov    rcx,r12
  d3:	5b                   	pop    rbx
  d4:	31 c0                	xor    eax,eax
  d6:	41 5c                	pop    r12
  d8:	41 5d                	pop    r13
  da:	5d                   	pop    rbp
  db:	ff e1                	jmp    rcx

Disassembly of section .rodata.str1.1:

0000000000000000 <.rodata.str1.1>:
   0:	25 23 30 68 68       	and    eax,0x68683023
   5:	78 00                	js     7 <read+0x7>

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	97                   	xchg   edi,eax
   1:	02 00                	add    al,BYTE PTR [rax]
   3:	00 05 00 01 08 00    	add    BYTE PTR [rip+0x80100],al        # 80109 <read+0x80109>
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 09                	add    BYTE PTR [rcx],cl
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 00                	add    BYTE PTR [rax],al
  11:	1d 00 00 00 00       	sbb    eax,0x0
	...
  22:	dd 00                	fld    QWORD PTR [rax]
	...
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	02 08                	add    cl,BYTE PTR [rax]
  30:	07                   	(bad)
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 00                	add    BYTE PTR [rax],al
  35:	02 08                	add    cl,BYTE PTR [rax]
  37:	05 00 00 00 00       	add    eax,0x0
  3c:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	00 00                	add    BYTE PTR [rax],al
  43:	0a 04 05 69 6e 74 00 	or     al,BYTE PTR [rax*1+0x746e69]
  4a:	05 43 00 00 00       	add    eax,0x43
  4f:	02 02                	add    al,BYTE PTR [rdx]
  51:	07                   	(bad)
  52:	00 00                	add    BYTE PTR [rax],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	02 02                	add    al,BYTE PTR [rdx]
  58:	05 00 00 00 00       	add    eax,0x0
  5d:	06                   	(bad)
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	00 00                	add    BYTE PTR [rax],al
  62:	02 10                	add    dl,BYTE PTR [rax]
  64:	17                   	(bad)
  65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  66:	00 00                	add    BYTE PTR [rax],al
  68:	00 05 5d 00 00 00    	add    BYTE PTR [rip+0x5d],al        # cb <.debug_info+0xcb>
  6e:	02 01                	add    al,BYTE PTR [rcx]
  70:	08 00                	or     BYTE PTR [rax],al
  72:	00 00                	add    BYTE PTR [rax],al
  74:	00 02                	add    BYTE PTR [rdx],al
  76:	01 06                	add    DWORD PTR [rsi],eax
  78:	00 00                	add    BYTE PTR [rax],al
  7a:	00 00                	add    BYTE PTR [rax],al
  7c:	07                   	(bad)
  7d:	75 00                	jne    7f <.debug_info+0x7f>
  7f:	00 00                	add    BYTE PTR [rax],al
  81:	02 01                	add    al,BYTE PTR [rcx]
  83:	02 00                	add    al,BYTE PTR [rax]
  85:	00 00                	add    BYTE PTR [rax],al
  87:	00 02                	add    BYTE PTR [rdx],al
  89:	08 07                	or     BYTE PTR [rdi],al
  8b:	00 00                	add    BYTE PTR [rax],al
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	02 08                	add    cl,BYTE PTR [rax]
  91:	05 00 00 00 00       	add    eax,0x0
  96:	0b 01                	or     eax,DWORD PTR [rcx]
  98:	03 17                	add    edx,DWORD PTR [rdi]
  9a:	09 ad 00 00 00 0c    	or     DWORD PTR [rbp+0xc000000],ebp
  a0:	00 00                	add    BYTE PTR [rax],al
  a2:	00 00                	add    BYTE PTR [rax],al
  a4:	03 18                	add    ebx,DWORD PTR [rax]
  a6:	0a ad 00 00 00 00    	or     ch,BYTE PTR [rbp+0x0]
  ac:	00 0d 75 00 00 00    	add    BYTE PTR [rip+0x75],cl        # 127 <.debug_info+0x127>
  b2:	bd 00 00 00 0e       	mov    ebp,0xe000000
  b7:	88 00                	mov    BYTE PTR [rax],al
  b9:	00 00                	add    BYTE PTR [rax],al
  bb:	00 00                	add    BYTE PTR [rax],al
  bd:	06                   	(bad)
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	00 00                	add    BYTE PTR [rax],al
  c2:	03 19                	add    ebx,DWORD PTR [rcx]
  c4:	03 96 00 00 00 0f    	add    edx,DWORD PTR [rsi+0xf000000]
  ca:	00 00                	add    BYTE PTR [rax],al
  cc:	00 00                	add    BYTE PTR [rax],al
  ce:	03 1b                	add    ebx,DWORD PTR [rbx]
  d0:	2c e2                	sub    al,0xe2
  d2:	00 00                	add    BYTE PTR [rax],al
  d4:	00 ff                	add    bh,bh
  d6:	ff                   	(bad)
  d7:	ff                   	(bad)
  d8:	ff                   	(bad)
  d9:	ff                   	(bad)
  da:	ff                   	(bad)
  db:	ff                   	(bad)
  dc:	ff 08                	dec    DWORD PTR [rax]
  de:	bd 00 00 00 07       	mov    ebp,0x7000000
  e3:	dd 00                	fld    QWORD PTR [rax]
  e5:	00 00                	add    BYTE PTR [rax],al
  e7:	10 00                	adc    BYTE PTR [rax],al
  e9:	00 00                	add    BYTE PTR [rax],al
  eb:	00 03                	add    BYTE PTR [rbx],al
  ed:	0c 2d                	or     al,0x2d
  ef:	43 00 00             	rex.XB add BYTE PTR [r8],al
  f2:	00 fe                	add    dh,bh
  f4:	00 00                	add    BYTE PTR [rax],al
  f6:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
  f9:	01 00                	add    DWORD PTR [rax],eax
  fb:	00 11                	add    BYTE PTR [rcx],dl
  fd:	00 08                	add    BYTE PTR [rax],cl
  ff:	7c 00                	jl     101 <.debug_info+0x101>
 101:	00 00                	add    BYTE PTR [rax],al
 103:	12 fe                	adc    bh,dh
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 13                	add    BYTE PTR [rbx],dl
 109:	69 6e 62 00 04 08 0f 	imul   ebp,DWORD PTR [rsi+0x62],0xf080400
 110:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 111:	00 00                	add    BYTE PTR [rax],al
 113:	00 1e                	add    BYTE PTR [rsi],bl
 115:	01 00                	add    DWORD PTR [rax],eax
 117:	00 04 4f             	add    BYTE PTR [rdi+rcx*2],al
 11a:	00 00                	add    BYTE PTR [rax],al
 11c:	00 00                	add    BYTE PTR [rax],al
 11e:	14 00                	adc    al,0x0
 120:	00 00                	add    BYTE PTR [rax],al
 122:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
 125:	06                   	(bad)
 126:	35 01 00 00 04       	xor    eax,0x4000001
 12b:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
 12e:	00 04 6e             	add    BYTE PTR [rsi+rbp*2],al
 131:	00 00                	add    BYTE PTR [rax],al
 133:	00 00                	add    BYTE PTR [rax],al
 135:	15 00 00 00 00       	adc    eax,0x0
 13a:	01 0a                	add    DWORD PTR [rdx],ecx
 13c:	06                   	(bad)
	...
 145:	dd 00                	fld    QWORD PTR [rax]
 147:	00 00                	add    BYTE PTR [rax],al
 149:	00 00                	add    BYTE PTR [rax],al
 14b:	00 00                	add    BYTE PTR [rax],al
 14d:	01 9c 16 69 6e 00 01 	add    DWORD PTR [rsi+rdx*1+0x1006e69],ebx
 154:	12 14 69             	adc    dl,BYTE PTR [rcx+rbp*2]
 157:	00 00                	add    BYTE PTR [rax],al
 159:	00 02                	add    BYTE PTR [rdx],al
 15b:	91                   	xchg   ecx,eax
 15c:	4b 17                	rex.WXB (bad)
	...
 166:	25 00 00 00 00       	and    eax,0x0
 16b:	00 00                	add    BYTE PTR [rax],al
 16d:	00 97 01 00 00 18    	add    BYTE PTR [rdi+0x18000001],dl
 173:	00 00                	add    BYTE PTR [rax],al
 175:	00 00                	add    BYTE PTR [rax],al
 177:	01 18                	add    DWORD PTR [rax],ebx
 179:	16                   	(bad)
 17a:	4a 00 00             	rex.WX add BYTE PTR [rax],al
 17d:	00 02                	add    BYTE PTR [rdx],al
 17f:	91                   	xchg   ecx,eax
 180:	4c 19 00             	sbb    QWORD PTR [rax],r8
 183:	00 00                	add    BYTE PTR [rax],al
 185:	00 00                	add    BYTE PTR [rax],al
 187:	00 00                	add    BYTE PTR [rax],al
 189:	00 08                	add    BYTE PTR [rax],cl
 18b:	01 00                	add    DWORD PTR [rax],eax
 18d:	00 01                	add    BYTE PTR [rcx],al
 18f:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 192:	0a f7                	or     dh,bh
 194:	01 00                	add    DWORD PTR [rax],eax
 196:	00 03                	add    BYTE PTR [rbx],al
	...
 1a0:	1e                   	(bad)
 1a1:	01 00                	add    DWORD PTR [rax],eax
 1a3:	00 b6 01 00 00 01    	add    BYTE PTR [rsi+0x1000001],dh
 1a9:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 1ac:	0a f0                	or     dh,al
 1ae:	01 01                	add    DWORD PTR [rcx],eax
 1b0:	01 54 02 08          	add    DWORD PTR [rdx+rax*1+0x8],edx
 1b4:	a0 00 03 00 00 00 00 	movabs al,ds:0x300
 1bb:	00 00 
 1bd:	00 00                	add    BYTE PTR [rax],al
 1bf:	1e                   	(bad)
 1c0:	01 00                	add    DWORD PTR [rax],eax
 1c2:	00 d4                	add    ah,dl
 1c4:	01 00                	add    DWORD PTR [rax],eax
 1c6:	00 01                	add    BYTE PTR [rcx],al
 1c8:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 1cb:	0a f2                	or     dh,dl
 1cd:	01 01                	add    DWORD PTR [rcx],eax
 1cf:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
 1d3:	00 03                	add    BYTE PTR [rbx],al
	...
 1dd:	1e                   	(bad)
 1de:	01 00                	add    DWORD PTR [rax],eax
 1e0:	00 f2                	add    dl,dh
 1e2:	01 00                	add    DWORD PTR [rax],eax
 1e4:	00 01                	add    BYTE PTR [rcx],al
 1e6:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 1e9:	0a f3                	or     dh,bl
 1eb:	01 01                	add    DWORD PTR [rcx],eax
 1ed:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
 1f1:	00 03                	add    BYTE PTR [rbx],al
	...
 1fb:	1e                   	(bad)
 1fc:	01 00                	add    DWORD PTR [rax],eax
 1fe:	00 10                	add    BYTE PTR [rax],dl
 200:	02 00                	add    al,BYTE PTR [rax]
 202:	00 01                	add    BYTE PTR [rcx],al
 204:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 207:	0a f4                	or     dh,ah
 209:	01 01                	add    DWORD PTR [rcx],eax
 20b:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
 20f:	00 03                	add    BYTE PTR [rbx],al
	...
 219:	1e                   	(bad)
 21a:	01 00                	add    DWORD PTR [rax],eax
 21c:	00 2e                	add    BYTE PTR [rsi],ch
 21e:	02 00                	add    al,BYTE PTR [rax]
 220:	00 01                	add    BYTE PTR [rcx],al
 222:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 225:	0a f5                	or     dh,ch
 227:	01 01                	add    DWORD PTR [rcx],eax
 229:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
 22d:	00 03                	add    BYTE PTR [rbx],al
	...
 237:	1e                   	(bad)
 238:	01 00                	add    DWORD PTR [rax],eax
 23a:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
 23d:	00 00                	add    BYTE PTR [rax],al
 23f:	01 01                	add    DWORD PTR [rcx],eax
 241:	55                   	push   rbp
 242:	03 0a                	add    ecx,DWORD PTR [rdx]
 244:	f6 01 01             	test   BYTE PTR [rcx],0x1
 247:	01 54 02 08          	add    DWORD PTR [rdx+rax*1+0x8],edx
 24b:	ec                   	in     al,dx
 24c:	00 03                	add    BYTE PTR [rbx],al
	...
 256:	08 01                	or     BYTE PTR [rcx],al
 258:	00 00                	add    BYTE PTR [rax],al
 25a:	66 02 00             	data16 add al,BYTE PTR [rax]
 25d:	00 01                	add    BYTE PTR [rcx],al
 25f:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
 262:	0a f7                	or     dh,bh
 264:	01 00                	add    DWORD PTR [rax],eax
 266:	03 00                	add    eax,DWORD PTR [rax]
 268:	00 00                	add    BYTE PTR [rax],al
 26a:	00 00                	add    BYTE PTR [rax],al
 26c:	00 00                	add    BYTE PTR [rax],al
 26e:	00 e7                	add    bh,ah
 270:	00 00                	add    BYTE PTR [rax],al
 272:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
 275:	00 00                	add    BYTE PTR [rax],al
 277:	01 01                	add    DWORD PTR [rcx],eax
 279:	55                   	push   rbp
 27a:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
 27d:	00 1a                	add    BYTE PTR [rdx],bl
	...
 287:	e7 00                	out    0x0,eax
 289:	00 00                	add    BYTE PTR [rax],al
 28b:	01 01                	add    DWORD PTR [rcx],eax
 28d:	55                   	push   rbp
 28e:	09 03                	or     DWORD PTR [rbx],eax
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 49 00             	add    DWORD PTR [rcx+0x0],ecx
   3:	02 18                	add    bl,BYTE PTR [rax]
   5:	7e 18                	jle    1f <.debug_abbrev+0x1f>
   7:	00 00                	add    BYTE PTR [rax],al
   9:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
   c:	0b 0b                	or     ecx,DWORD PTR [rbx]
   e:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
  11:	0e                   	(bad)
  12:	00 00                	add    BYTE PTR [rax],al
  14:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
  17:	7d 01                	jge    1a <.debug_abbrev+0x1a>
  19:	7f 13                	jg     2e <.debug_abbrev+0x2e>
  1b:	01 13                	add    DWORD PTR [rbx],edx
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	04 05                	add    al,0x5
  21:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  24:	00 00                	add    BYTE PTR [rax],al
  26:	05 35 00 49 13       	add    eax,0x13490035
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	06                   	(bad)
  2e:	16                   	(bad)
  2f:	00 03                	add    BYTE PTR [rbx],al
  31:	0e                   	(bad)
  32:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  34:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  36:	39 0b                	cmp    DWORD PTR [rbx],ecx
  38:	49 13 00             	adc    rax,QWORD PTR [r8]
  3b:	00 07                	add    BYTE PTR [rdi],al
  3d:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
  41:	00 00                	add    BYTE PTR [rax],al
  43:	08 0f                	or     BYTE PTR [rdi],cl
  45:	00 0b                	add    BYTE PTR [rbx],cl
  47:	21 08                	and    DWORD PTR [rax],ecx
  49:	49 13 00             	adc    rax,QWORD PTR [r8]
  4c:	00 09                	add    BYTE PTR [rcx],cl
  4e:	11 01                	adc    DWORD PTR [rcx],eax
  50:	25 0e 13 0b 03       	and    eax,0x30b130e
  55:	1f                   	(bad)
  56:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
  58:	11 01                	adc    DWORD PTR [rcx],eax
  5a:	12 07                	adc    al,BYTE PTR [rdi]
  5c:	10 17                	adc    BYTE PTR [rdi],dl
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	0a 24 00             	or     ah,BYTE PTR [rax+rax*1]
  63:	0b 0b                	or     ecx,DWORD PTR [rbx]
  65:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
  68:	08 00                	or     BYTE PTR [rax],al
  6a:	00 0b                	add    BYTE PTR [rbx],cl
  6c:	13 01                	adc    eax,DWORD PTR [rcx]
  6e:	0b 0b                	or     ecx,DWORD PTR [rbx]
  70:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  72:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  74:	39 0b                	cmp    DWORD PTR [rbx],ecx
  76:	01 13                	add    DWORD PTR [rbx],edx
  78:	00 00                	add    BYTE PTR [rax],al
  7a:	0c 0d                	or     al,0xd
  7c:	00 03                	add    BYTE PTR [rbx],al
  7e:	0e                   	(bad)
  7f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  81:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  83:	39 0b                	cmp    DWORD PTR [rbx],ecx
  85:	49 13 38             	adc    rdi,QWORD PTR [r8]
  88:	0b 00                	or     eax,DWORD PTR [rax]
  8a:	00 0d 01 01 49 13    	add    BYTE PTR [rip+0x13490101],cl        # 13490191 <read+0x13490191>
  90:	01 13                	add    DWORD PTR [rbx],edx
  92:	00 00                	add    BYTE PTR [rax],al
  94:	0e                   	(bad)
  95:	21 00                	and    DWORD PTR [rax],eax
  97:	49 13 2f             	adc    rbp,QWORD PTR [r15]
  9a:	0b 00                	or     eax,DWORD PTR [rax]
  9c:	00 0f                	add    BYTE PTR [rdi],cl
  9e:	34 00                	xor    al,0x0
  a0:	03 0e                	add    ecx,DWORD PTR [rsi]
  a2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  a4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  a6:	39 0b                	cmp    DWORD PTR [rbx],ecx
  a8:	49 13 1c 07          	adc    rbx,QWORD PTR [r15+rax*1]
  ac:	00 00                	add    BYTE PTR [rax],al
  ae:	10 2e                	adc    BYTE PTR [rsi],ch
  b0:	01 3f                	add    DWORD PTR [rdi],edi
  b2:	19 03                	sbb    DWORD PTR [rbx],eax
  b4:	0e                   	(bad)
  b5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  b7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  b9:	39 0b                	cmp    DWORD PTR [rbx],ecx
  bb:	27                   	(bad)
  bc:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  bf:	3c 19                	cmp    al,0x19
  c1:	01 13                	add    DWORD PTR [rbx],edx
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	11 18                	adc    DWORD PTR [rax],ebx
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 12                	add    BYTE PTR [rdx],dl
  cb:	37                   	(bad)
  cc:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  cf:	00 00                	add    BYTE PTR [rax],al
  d1:	13 2e                	adc    ebp,DWORD PTR [rsi]
  d3:	01 3f                	add    DWORD PTR [rdi],edi
  d5:	19 03                	sbb    DWORD PTR [rbx],eax
  d7:	08 3a                	or     BYTE PTR [rdx],bh
  d9:	0b 3b                	or     edi,DWORD PTR [rbx]
  db:	0b 39                	or     edi,DWORD PTR [rcx]
  dd:	0b 27                	or     esp,DWORD PTR [rdi]
  df:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  e2:	3c 19                	cmp    al,0x19
  e4:	01 13                	add    DWORD PTR [rbx],edx
  e6:	00 00                	add    BYTE PTR [rax],al
  e8:	14 2e                	adc    al,0x2e
  ea:	01 3f                	add    DWORD PTR [rdi],edi
  ec:	19 03                	sbb    DWORD PTR [rbx],eax
  ee:	0e                   	(bad)
  ef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  f1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  f3:	39 0b                	cmp    DWORD PTR [rbx],ecx
  f5:	27                   	(bad)
  f6:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  f9:	01 13                	add    DWORD PTR [rbx],edx
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	15 2e 01 3f 19       	adc    eax,0x193f012e
 102:	03 0e                	add    ecx,DWORD PTR [rsi]
 104:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 106:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 108:	39 0b                	cmp    DWORD PTR [rbx],ecx
 10a:	27                   	(bad)
 10b:	19 11                	sbb    DWORD PTR [rcx],edx
 10d:	01 12                	add    DWORD PTR [rdx],edx
 10f:	07                   	(bad)
 110:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
 114:	00 00                	add    BYTE PTR [rax],al
 116:	16                   	(bad)
 117:	34 00                	xor    al,0x0
 119:	03 08                	add    ecx,DWORD PTR [rax]
 11b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 11d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 11f:	39 0b                	cmp    DWORD PTR [rbx],ecx
 121:	49 13 02             	adc    rax,QWORD PTR [r10]
 124:	18 00                	sbb    BYTE PTR [rax],al
 126:	00 17                	add    BYTE PTR [rdi],dl
 128:	0b 01                	or     eax,DWORD PTR [rcx]
 12a:	11 01                	adc    DWORD PTR [rcx],eax
 12c:	12 07                	adc    al,BYTE PTR [rdi]
 12e:	01 13                	add    DWORD PTR [rbx],edx
 130:	00 00                	add    BYTE PTR [rax],al
 132:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
 135:	03 0e                	add    ecx,DWORD PTR [rsi]
 137:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 139:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 13b:	39 0b                	cmp    DWORD PTR [rbx],ecx
 13d:	49 13 02             	adc    rax,QWORD PTR [r10]
 140:	18 00                	sbb    BYTE PTR [rax],al
 142:	00 19                	add    BYTE PTR [rcx],bl
 144:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
 148:	7f 13                	jg     15d <read+0x15d>
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	1a 48 01             	sbb    cl,BYTE PTR [rax+0x1]
 14f:	7d 01                	jge    152 <.debug_abbrev+0x152>
 151:	82                   	(bad)
 152:	01 19                	add    DWORD PTR [rcx],ebx
 154:	7f 13                	jg     169 <read+0x169>
 156:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
  18:	dd 00                	fld    QWORD PTR [rax]
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	05 01 00 00 05       	add    eax,0x5000001
   5:	00 08                	add    BYTE PTR [rax],cl
   7:	00 3d 00 00 00 01    	add    BYTE PTR [rip+0x1000000],bh        # 100000d <read+0x100000d>
   d:	01 01                	add    DWORD PTR [rcx],eax
   f:	fb                   	sti
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     eax,0x1010100
  16:	01 00                	add    DWORD PTR [rax],eax
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	01 00                	add    DWORD PTR [rax],eax
  1c:	00 01                	add    BYTE PTR [rcx],al
  1e:	01 01                	add    DWORD PTR [rcx],eax
  20:	1f                   	(bad)
  21:	02 00                	add    al,BYTE PTR [rax]
  23:	00 00                	add    BYTE PTR [rax],al
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 02                	add    BYTE PTR [rdx],al
  2b:	01 1f                	add    DWORD PTR [rdi],ebx
  2d:	02 0f                	add    cl,BYTE PTR [rdi]
  2f:	05 00 00 00 00       	add    eax,0x0
  34:	01 00                	add    DWORD PTR [rax],eax
  36:	00 00                	add    BYTE PTR [rax],al
  38:	00 01                	add    BYTE PTR [rcx],al
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	01 00                	add    DWORD PTR [rax],eax
  40:	00 00                	add    BYTE PTR [rax],al
  42:	00 01                	add    BYTE PTR [rcx],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	01 05 11 00 09 02    	add    DWORD PTR [rip+0x2090011],eax        # 209005f <read+0x209005f>
	...
  56:	03 09                	add    ecx,DWORD PTR [rcx]
  58:	01 05 05 13 05 11    	add    DWORD PTR [rip+0x11051305],eax        # 11051363 <read+0x11051363>
  5e:	06                   	(bad)
  5f:	11 05 05 21 05 11    	adc    DWORD PTR [rip+0x11052105],eax        # 1105216a <read+0x1105216a>
  65:	9d                   	popf
  66:	05 05 03 0a 58       	add    eax,0x580a0305
  6b:	05 11 03 76 9e       	add    eax,0x9e760311
  70:	05 05 03 0a 2e       	add    eax,0x2e0a0305
  75:	05 11 03 76 9e       	add    eax,0x9e760311
  7a:	05 05 21 05 11       	add    eax,0x11052105
  7f:	9d                   	popf
  80:	05 05 4b 06 2f       	add    eax,0x2f064b05
  85:	91                   	xchg   ecx,eax
  86:	91                   	xchg   ecx,eax
  87:	91                   	xchg   ecx,eax
  88:	91                   	xchg   ecx,eax
  89:	bc 05 19 06 01       	mov    esp,0x1061905
  8e:	05 05 08 14 05       	add    eax,0x5140805
  93:	14 3a                	adc    al,0x3a
  95:	05 05 06 3e 92       	add    eax,0x923e0605
  9a:	05 1e 01 05 10       	add    eax,0x1005011e
  9f:	06                   	(bad)
  a0:	01 05 1e 4a 05 25    	add    DWORD PTR [rip+0x25054a1e],eax        # 25054ac4 <read+0x25054ac4>
  a6:	00 02                	add    BYTE PTR [rdx],al
  a8:	04 01                	add    al,0x1
  aa:	58                   	pop    rax
  ab:	05 1e 00 02 04       	add    eax,0x402001e
  b0:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
  b3:	09 06                	or     DWORD PTR [rsi],eax
  b5:	4b 05 0e 06 01 05    	rex.WXB add rax,0x501060e
  bb:	0c 74                	or     al,0x74
  bd:	05 09 06 3d 05       	add    eax,0x53d0609
  c2:	16                   	(bad)
  c3:	06                   	(bad)
  c4:	01 05 09 06 75 05    	add    DWORD PTR [rip+0x5750609],eax        # 57506d3 <read+0x57506d3>
  ca:	10 00                	adc    BYTE PTR [rax],al
  cc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
  cf:	74 05                	je     d6 <.debug_line+0xd6>
  d1:	15 00 02 04 01       	adc    eax,0x1040200
  d6:	06                   	(bad)
  d7:	01 05 10 00 02 04    	add    DWORD PTR [rip+0x4020010],eax        # 40200ed <read+0x40200ed>
  dd:	01 90 05 05 06 47    	add    DWORD PTR [rax+0x47060505],edx
  e3:	05 1e 01 05 10       	add    eax,0x1005011e
  e8:	06                   	(bad)
  e9:	01 05 1e 4a 05 05    	add    DWORD PTR [rip+0x5054a1e],eax        # 5054b0d <read+0x5054b0d>
  ef:	06                   	(bad)
  f0:	50                   	push   rax
  f1:	05 01 06 4c 05       	add    eax,0x54c0601
  f6:	05 48 05 01 68       	add    eax,0x68010548
  fb:	05 05 1e 05 01       	add    eax,0x1051e05
 100:	30 05 05 56 02 02    	xor    BYTE PTR [rip+0x2025605],al        # 202570b <read+0x202570b>
 106:	00 01                	add    BYTE PTR [rcx],al
 108:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	73 74                	jae    76 <.debug_str+0x76>
   2:	64 65 72 72          	fs gs jb 78 <.debug_str+0x78>
   6:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
   9:	75 6e                	jne    79 <.debug_str+0x79>
   b:	74 00                	je     d <.debug_str+0xd>
   d:	46                   	rex.RX
   e:	49                   	rex.WB
   f:	4c                   	rex.WR
  10:	45 00 75 6e          	add    BYTE PTR [r13+0x6e],r14b
  14:	73 69                	jae    7f <.debug_str+0x7f>
  16:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  18:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  1d:	61                   	(bad)
  1e:	72 00                	jb     20 <.debug_str+0x20>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  23:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  27:	73 69                	jae    92 <.debug_str+0x92>
  29:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  2b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  30:	74 00                	je     32 <.debug_str+0x32>
  32:	73 68                	jae    9c <.debug_str+0x9c>
  34:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  35:	72 74                	jb     ab <.debug_str+0xab>
  37:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  3a:	73 69                	jae    a5 <.debug_str+0xa5>
  3c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  3e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  43:	74 00                	je     45 <.debug_str+0x45>
  45:	72 65                	jb     ac <.debug_str+0xac>
  47:	61                   	(bad)
  48:	64 00 75 38          	add    BYTE PTR fs:[rbp+0x38],dh
  4c:	69 6e 74 00 6f 75 74 	imul   ebp,DWORD PTR [rsi+0x74],0x74756f00
  53:	62                   	(bad)
  54:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
  57:	73 69                	jae    c2 <.debug_str+0xc2>
  59:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  5b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  60:	74 00                	je     62 <.debug_str+0x62>
  62:	6c                   	ins    BYTE PTR es:[rdi],dx
  63:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  64:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  65:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
  6a:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
  6e:	73 69                	jae    d9 <.debug_str+0xd9>
  70:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  72:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
  77:	74 00                	je     79 <.debug_str+0x79>
  79:	6c                   	ins    BYTE PTR es:[rdi],dx
  7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  7c:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
  81:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
  85:	74 00                	je     87 <.debug_str+0x87>
  87:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  8a:	72 00                	jb     8c <.debug_str+0x8c>
  8c:	70 72                	jo     100 <.debug_str+0x100>
  8e:	69 6e 74 66 00 73 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68730066
  95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  96:	72 74                	jb     10c <.debug_str+0x10c>
  98:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  9b:	74 00                	je     9d <.debug_str+0x9d>
  9d:	64 75 6d             	fs jne 10d <.debug_str+0x10d>
  a0:	6d                   	ins    DWORD PTR es:[rdi],dx
  a1:	79 00                	jns    a3 <.debug_str+0xa3>
  a3:	6c                   	ins    BYTE PTR es:[rdi],dx
  a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  a6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
  aa:	74 00                	je     ac <.debug_str+0xac>
  ac:	47                   	rex.RXB
  ad:	4e 55                	rex.WRX push rbp
  af:	20 43 31             	and    BYTE PTR [rbx+0x31],al
  b2:	37                   	(bad)
  b3:	20 31                	and    BYTE PTR [rcx],dh
  b5:	32 2e                	xor    ch,BYTE PTR [rsi]
  b7:	32 2e                	xor    ch,BYTE PTR [rsi]
  b9:	30 20                	xor    BYTE PTR [rax],ah
  bb:	2d 6d 63 6d 6f       	sub    eax,0x6f6d636d
  c0:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
  c3:	3d 6c 61 72 67       	cmp    eax,0x6772616c
  c8:	65 20 2d 6d 6e 6f 2d 	and    BYTE PTR gs:[rip+0x2d6f6e6d],ch        # 2d6f6f3c <read+0x2d6f6f3c>
  cf:	72 65                	jb     136 <.debug_str+0x136>
  d1:	64 2d 7a 6f 6e 65    	fs sub eax,0x656e6f7a
  d7:	20 2d 6d 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e6d],ch        # 2d6f6f4a <read+0x2d6f6f4a>
  dd:	6d                   	ins    DWORD PTR es:[rdi],dx
  de:	6d                   	ins    DWORD PTR es:[rdi],dx
  df:	78 20                	js     101 <.debug_str+0x101>
  e1:	2d 6d 6e 6f 2d       	sub    eax,0x2d6f6e6d
  e6:	73 73                	jae    15b <.debug_str+0x15b>
  e8:	65 20 2d 6d 6e 6f 2d 	and    BYTE PTR gs:[rip+0x2d6f6e6d],ch        # 2d6f6f5c <read+0x2d6f6f5c>
  ef:	73 73                	jae    164 <read+0x164>
  f1:	65 32 20             	xor    ah,BYTE PTR gs:[rax]
  f4:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  f9:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  ff:	72 69                	jb     16a <read+0x16a>
 101:	63 20                	movsxd esp,DWORD PTR [rax]
 103:	2d 6d 61 72 63       	sub    eax,0x6372616d
 108:	68 3d 78 38 36       	push   0x3638783d
 10d:	2d 36 34 20 2d       	sub    eax,0x2d203436
 112:	67 20 2d 4f 33 20 2d 	and    BYTE PTR [eip+0x2d20334f],ch        # 2d203468 <read+0x2d203468>
 119:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
 11b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 11c:	2d 73 74 61 63       	sub    eax,0x63617473
 121:	6b 2d 70 72 6f 74 65 	imul   ebp,DWORD PTR [rip+0x746f7270],0x65        # 746f7398 <read+0x746f7398>
 128:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
 12c:	20 2d 66 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e66],ch        # 2d6f6f98 <read+0x2d6f6f98>
 132:	62 75                	(bad)
 134:	69 6c 74 69 6e 20 2d 	imul   ebp,DWORD PTR [rsp+rsi*2+0x69],0x662d206e
 13b:	66 
 13c:	6d                   	ins    DWORD PTR es:[rdi],dx
 13d:	73 2d                	jae    16c <read+0x16c>
 13f:	65 78 74             	gs js  1b6 <read+0x1b6>
 142:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 144:	73 69                	jae    1af <read+0x1af>
 146:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 147:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 148:	73 20                	jae    16a <read+0x16a>
 14a:	2d 66 66 72 65       	sub    eax,0x65726666
 14f:	65 73 74             	gs jae 1c6 <read+0x1c6>
 152:	61                   	(bad)
 153:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 154:	64 69 6e 67 00 5f 42 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f425f00
 15b:	6f 
 15c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 15d:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	55                   	push   rbp
   2:	73 65                	jae    69 <read+0x69>
   4:	72 73                	jb     79 <read+0x79>
   6:	2f                   	(bad)
   7:	72 61                	jb     6a <read+0x6a>
   9:	79 2f                	jns    3a <.debug_line_str+0x3a>
   b:	41 73 6d             	rex.B jae 7b <read+0x7b>
   e:	4f 53                	rex.WRXB push r11
  10:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
  13:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  15:	66 73 2e             	data16 jae 46 <.debug_line_str+0x46>
  18:	63 00                	movsxd eax,DWORD PTR [rax]
  1a:	2f                   	(bad)
  1b:	55                   	push   rbp
  1c:	73 65                	jae    83 <read+0x83>
  1e:	72 73                	jb     93 <read+0x93>
  20:	2f                   	(bad)
  21:	72 61                	jb     84 <read+0x84>
  23:	79 2f                	jns    54 <read+0x54>
  25:	41 73 6d             	rex.B jae 95 <read+0x95>
  28:	4f 53                	rex.WRXB push r11
  2a:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
  2d:	63 00                	movsxd eax,DWORD PTR [rax]
  2f:	66 73 2e             	data16 jae 60 <read+0x60>
  32:	63 00                	movsxd eax,DWORD PTR [rax]
  34:	66 73 2e             	data16 jae 65 <read+0x65>
  37:	63 00                	movsxd eax,DWORD PTR [rax]
  39:	74 79                	je     b4 <read+0xb4>
  3b:	70 65                	jo     a2 <read+0xa2>
  3d:	73 2e                	jae    6d <read+0x6d>
  3f:	68 00 73 74 64       	push   0x64747300
  44:	69 6f 2e 68 00 70 6f 	imul   ebp,DWORD PTR [rdi+0x2e],0x6f700068
  4b:	72 74                	jb     c1 <read+0xc1>
  4d:	73 2e                	jae    7d <read+0x7d>
  4f:	68                   	.byte 0x68
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   6:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   9:	55                   	push   rbp
   a:	29 20                	sub    DWORD PTR [rax],esp
   c:	31 32                	xor    DWORD PTR [rdx],esi
   e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  11:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 2c    	or     BYTE PTR [rax+0x2c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	dd 00                	fld    QWORD PTR [rax]
  26:	00 00                	add    BYTE PTR [rax],al
  28:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2b:	10 86 02 4d 0d 06    	adc    BYTE PTR [rsi+0x60d4d02],al
  31:	42 8d 03             	rex.X lea eax,[rbx]
  34:	4c 8c 04 4b          	rex.WR mov WORD PTR [rbx+rcx*2],es
  38:	83 05 02 ad c3 44 cc 	add    DWORD PTR [rip+0x44c3ad02],0xffffffcc        # 44c3ad41 <read+0x44c3ad41>
  3f:	42 cd 41             	rex.X int 0x41
  42:	c6                   	(bad)
  43:	0c 07                	or     al,0x7
  45:	08 00                	or     BYTE PTR [rax],al
	...
